<?xml version="1.0"?>
<launch>
  <arg name="ns" default="depthai"/>
  <arg name="node_name" default="driver"/>

  <arg name="camera_name" default="bw1097"/>
  <arg name="camera_param_uri" default="package://depthai_ros_driver/params/camera/"
    doc="Location of parameters is {camera_param_uri}/{camera_name}/{stream}.yaml"/>

  <!-- pipeline name -->
  <arg name="pipeline" default="depthai_ros_driver/MonoCameraControlPipeline"/>

  <!-- for StereoPipeline -->
  <arg name="with_depth" default="true"/>
  <arg name="stereo_lrcheck" default="true"/>
  <arg name="stereo_extended" default="false"/>
  <arg name="stereo_subpixel" default="true"/>

  <!-- for MobilenetSSDPipeline -->
  <arg name="blob_file" default="$(find depthai_ros_driver)/resources/mobilenet_ssd.blob"/>
  <arg name="mobilenetssd_openvino_version" default="2" doc="integer corresponding to dai::OpenVINO::Version"/>

  <!-- launching parameters -->
  <arg name="use_gdb" default="false"/>
  <arg name="launch_prefix" value="/usr/bin/gdb --args" if="$(arg use_gdb)"/>
  <arg name="launch_prefix" value="" unless="$(arg use_gdb)"/>

  <!-- Launch the Depthai node -->
  <group ns="$(arg ns)">
    <node pkg="depthai_ros_driver" type="gen2_ros_driver" name="$(arg node_name)" output="screen" launch-prefix="$(arg launch_prefix)">
      <param name="camera_name" value="$(arg camera_name)"/>
      <param name="camera_param_uri" value="$(arg camera_param_uri)"/>

      <!-- pipeline name -->
      <param name="pipeline" value="$(arg pipeline)"/>

      <!-- for StereoPipeline -->
      <param name="with_depth" value="$(arg with_depth)"/>
      <param name="stereo_lrcheck" value="$(arg stereo_lrcheck)"/>
      <param name="stereo_extended" value="$(arg stereo_extended)"/>
      <param name="stereo_subpixel" value="$(arg stereo_subpixel)"/>

      <!-- for MobilenetSSDPipeline -->
      <param name="blob_file" value="$(arg blob_file)"/>
      <param name="mobilenetssd_openvino_version" value="$(arg mobilenetssd_openvino_version)"/>
    </node>
  </group>

  <!-- Publish tf -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find depthai_ros_driver)/urdf/$(arg camera_name).urdf.xacro'"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="tf_prefix" value=""/>
  </node>
</launch>
